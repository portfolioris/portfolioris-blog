/*  =========================================================================
    Foundation.Atoms.Button
    ========================================================================= */

/*  Imports
    ========================================================================= */

@import "engine";



/*  Variables
    ========================================================================= */

// Config switches
$c-button--transition-duration: $base-transition-duration-short !default;
$c-button--states: "&:hover, &:active, &:focus, &.is-active" !default;
$c-button--space: $supple-space !default;

// Default settings
$c-button--space-vertical: $supple-space-small !default;
$c-button--space-horizontal: $supple-space-small !default;
$c-button--icon-offset: $c-button--space !default;
$c-button--icon-animation-offset: 10px !default;

$c-button--color: $white !default;
$c-button--background-color: $black !default;

// variants
$c-button--active-background-color: $green !default;

$c-button--secondary-color: $gray-light !default;
$c-button--secondary-active-color: $gray-light !default;

$c-button--disabled-color: $gray-light !default;
$c-button--disabled-background-color: $gray-light !default;



/*  Animations
    ========================================================================= */

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}



/*  Module
    Core module
    ========================================================================= */

/**
 * 1. set the lineheight to 0 because we want to negate the baseline space.
 *      This allows us vertical align a lot of things perfectly into the center
 */

.c-button {
  display: inline-block;
  vertical-align: middle;
  margin: 0;
  border: none;
  border-radius: 0;
  font-family: $font-family-secondary;
  line-height: 0; /* [1] */
  font-weight: 500;
  text-decoration: none;
  background-color: $c-button--background-color;
  color: $c-button--color;
  appearance: none;
  transition-property: color, background-color;
  transition-duration: $c-button--transition-duration;
  transition-timing-function: linear;
  cursor: pointer;

  &:hover,
  &:active,
  &:focus,
  &.is-active {
    background-color: $c-button--active-background-color;
    color: $c-button--color;
    text-decoration: none;
    outline: none;
  }
}



/*  Elements
    ========================================================================= */

/**
 * 1. Reset that line-height again
 */
.c-button__inner {
  display: inline-flex;
  align-items: stretch;
  line-height: $supple-line-height-ratio; /* [1] */
}

.c-button__label {
  display: flex;
  padding-top: $c-button--space-vertical;
  padding-bottom: $c-button--space-vertical;
  padding-right: $c-button--space-horizontal;
  padding-left: $c-button--space-horizontal;
  line-height: 1;
}

.c-button__wrap-icon {
  display: flex;
  align-items: center;
  text-decoration: none;
  transition: transform $c-button--transition-duration $base-timing-function;
  background-color: $green;
  padding-top: $c-button--space-vertical;
  padding-bottom: $c-button--space-vertical;
  padding-right: $c-button--space-horizontal;
  padding-left: $c-button--space-horizontal;
  line-height: 1;
}

.c-button:disabled {
  background-color: $c-button--disabled-background-color !important;
  color: $c-button--disabled-color !important;
  cursor: not-allowed;
}



/*  Modifiers
    ========================================================================= */

.c-button--is-loading {
  cursor: wait;

  .c-button__wrap-icon {
    transform-origin: center;
    animation: rotate 1s linear infinite;
  }
}

/**
 * Reverse the icon from right to the left
 */
.c-button--reversed {
  .c-button__inner {
    flex-direction: row-reverse;
  }
}

.c-button--transparant {
  background-color: transparent;
}

/**
 * Hide the label, so only display a icon
 */
.c-button--hide-label {
  .c-button__label {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
  }
}



/*  Theming
    ========================================================================= */

.t-color--light {
  .c-button {
    border: solid;
    border-top: 1px solid $white;
    border-right: 1px solid $gray-medium;
    border-bottom: 3px solid $gray-dark;
    border-left: 1px solid $gray-medium;
    border-radius: 4px;
    background-color: transparent;
    text-shadow: 0 -1px 1px $black, 0 1px 1px $white;
    transition: all $base-transition-duration-short linear;
    position: relative;

    .c-button__inner {
      position: relative;
      z-index: 2;
    }

    &::before,
    &::after {
      content: '';
      display: block;
      position: absolute;
      z-index: 0;
      opacity: 1;
      background-image: linear-gradient(to bottom, $white, mix($green, $black, 70) 10%, $black 100%);
      transition: opacity $c-button--transition-duration linear;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      box-shadow: 0 0 4px 3px transparentize($green, 0.8);
      border-radius: 3px;
    }

    &::after {
      opacity: 0;
      box-shadow: 0 0 4px 3px transparentize($green, 0.8);
      background-image: linear-gradient(to bottom, $white, mix($green, $black, 90) 10%, $black 100%);
      z-index: 1;
    }

    #{$global-interaction-states} {
      &::after {
        opacity: 1;
      }
    }
  }
}
